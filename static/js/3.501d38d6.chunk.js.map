{"version":3,"sources":["components/styles/StyledSection/StyledSection.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/styles/StyledTypedText/StyledTypedText.tsx","components/view/typed-text/TypedText.tsx","components/view/about-text/AboutText.tsx","components/styles/StyledMargin/StyledMargin.tsx","components/styles/StyledMarginNumber/StyledMarginNumber.tsx","components/view/margin/Margin.tsx","helpers/uniqueStringGen.ts","components/containers/about/About.tsx"],"names":["StyledSection","styled","section","props","backgroundColor","theme","colors","black","fontColor","white","fonts","monaco","_arrayLikeToArray","arr","len","length","i","arr2","Array","_slicedToArray","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","err","o","minLen","n","prototype","toString","call","slice","constructor","name","from","test","TypeError","StyledTypedText","div","firstLine","showBlinker","TypedText","textToType","textToDisplay","setText","setTextTyped","textTyped","textIndex","currentText","useEffect","timerId","timedType","setTimeout","type","clearTimeout","role","aboutText","AboutText","useState","textLine","setTextLine","textLineDone","setTextLineDone","textLine1","setTextLine1","textLine1Done","setTextLine1Done","textLine2","setTextLine2","textLine2Done","setTextLine2Done","textLine3","setTextLine3","textLine3Done","setTextLine3Done","typedText","index","Theme","green","textTypedLines","typeText","StyledMargin","StyledMarginNumber","Margin","marginCount","url","useCurrentPathname","marginLength","fill","map","val","Math","random","substr","About","id"],"mappings":"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","file":"static/js/3.501d38d6.chunk.js","sourcesContent":["import styled from 'styled-components';\n\ninterface StyledSectionProps {\n  readonly backgroundColor?: string;\n  readonly fontColor?: string;\n}\n\nexport const StyledSection = styled.section<StyledSectionProps>`\n  background-color: ${(props) =>\n    props?.backgroundColor ? props?.backgroundColor : props.theme.colors.black};\n  color: ${(props) =>\n    props?.fontColor ? props?.fontColor : props.theme.colors.white};\n  padding: 1rem;\n  display: flex;\n  font-family: ${(props) => props.theme.fonts.monaco};\n  min-height: 100vh;\n  height: 100%;\n\n  @media (min-width: 1024px) {\n    justify-content: flex-start;\n  }\n`;\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import styled from 'styled-components';\n\ninterface StyledTypedTextProps {\n  showBlinker: boolean;\n  firstLine?: boolean;\n  fontColor?: string;\n}\n\nexport const StyledTypedText = styled.div<StyledTypedTextProps>`\n  font-size: ${(props) => (props.firstLine ? '1.5rem' : '1rem')};\n  margin-top: ${(props) => (props.firstLine ? '0' : '1rem')};\n  display: ${(props) => (props.firstLine ? 'inline' : 'default')};\n  color: ${(props) => (props.fontColor ? props.fontColor : 'default')};\n\n  &:after {\n    content: '';\n    border-right: ${(props) =>\n      props.showBlinker ? '2px solid white' : 'none'};\n    animation: blink 0.5s infinite ease;\n  }\n\n  @keyframes blink {\n    0% {\n      opacity: 0;\n    }\n    100% {\n      opacity: 1;\n    }\n  }\n`;\n","import React, { useEffect } from 'react';\nimport { StyledTypedText } from '../../styles/StyledTypedText/StyledTypedText';\n\ninterface Props {\n  index: number;\n  textToType: string;\n  textToDisplay: string;\n  setText: React.Dispatch<React.SetStateAction<string>>;\n  textTyped: boolean;\n  setTextTyped: React.Dispatch<React.SetStateAction<boolean>>;\n  firstLine?: boolean;\n  fontColor?: string;\n}\n\nexport const TypedText: React.FC<Props> = ({\n  textToType,\n  textToDisplay,\n  setText,\n  setTextTyped,\n  textTyped,\n  firstLine,\n  fontColor,\n}) => {\n  let textIndex = 0;\n  let currentText = '';\n\n  useEffect(() => {\n    const timedType = () => setTimeout(() => type(), 50);\n\n    let timerId: number;\n\n    const type = (): void => {\n      if (currentText?.length === textToType?.length) {\n        textIndex = 0;\n        setTextTyped(true);\n        return;\n      }\n\n      currentText = textToType?.slice(0, ++textIndex);\n\n      setText(currentText);\n      timerId = timedType();\n    };\n\n    !textTyped && type();\n\n    return () => {\n      timerId && clearTimeout(timerId);\n    };\n  }, []);\n\n  return (\n    <StyledTypedText\n      role={'TypedText'}\n      showBlinker={!textTyped}\n      firstLine={firstLine}\n      fontColor={fontColor}\n    >\n      {textToDisplay}\n    </StyledTypedText>\n  );\n};\n","import React, { useState } from 'react';\nimport Theme from '../../styles/theme';\nimport { TypedText } from '../typed-text/TypedText';\n\nconst aboutText: string[] = [\n  'Hello World, ',\n  'my name is Cian and I’m a full-stack developer.',\n  'I love to make stuff with JavaScript/TypeScript, React, Node, Python and pretty much any other modern web technology.',\n\n  ' (I also ❤️ Muay Thai and pugs.)',\n];\n\nexport const AboutText: React.FC = () => {\n  const [textLine, setTextLine] = useState<string>('');\n  const [textLineDone, setTextLineDone] = useState<boolean>(false);\n\n  const [textLine1, setTextLine1] = useState<string>('');\n  const [textLine1Done, setTextLine1Done] = useState<boolean>(false);\n\n  const [textLine2, setTextLine2] = useState<string>('');\n  const [textLine2Done, setTextLine2Done] = useState<boolean>(false);\n\n  const [textLine3, setTextLine3] = useState<string>('');\n  const [textLine3Done, setTextLine3Done] = useState<boolean>(false);\n\n  const typedText = [\n    <TypedText\n      index={0}\n      key=\"text-line\"\n      textToDisplay={textLine}\n      textToType={aboutText[0]}\n      setText={setTextLine}\n      setTextTyped={setTextLineDone}\n      textTyped={textLineDone}\n      firstLine={true}\n      fontColor={Theme.colors.green}\n    />,\n    <TypedText\n      index={1}\n      key=\"text-line1\"\n      textToDisplay={textLine1}\n      textToType={aboutText[1]}\n      setText={setTextLine1}\n      setTextTyped={setTextLine1Done}\n      textTyped={textLine1Done}\n      firstLine={true}\n    />,\n    <TypedText\n      index={2}\n      key=\"text-line2\"\n      textToDisplay={textLine2}\n      textToType={aboutText[2]}\n      setText={setTextLine2}\n      setTextTyped={setTextLine2Done}\n      textTyped={textLine2Done}\n    />,\n    <TypedText\n      index={3}\n      key=\"text-line3\"\n      textToDisplay={textLine3}\n      textToType={aboutText[3]}\n      setText={setTextLine3}\n      setTextTyped={setTextLine3Done}\n      textTyped={textLine3Done}\n    />,\n  ];\n\n  const typeText = (): JSX.Element[] => {\n    const textTypedLines = [typedText[0]];\n\n    if (textLineDone) textTypedLines.push(typedText[1]);\n    if (textLine1Done) textTypedLines.push(typedText[2]);\n    if (textLine2Done) textTypedLines.push(typedText[3]);\n\n    return textTypedLines;\n  };\n\n  return <div role=\"AboutText\">{typeText()}</div>;\n};\n","import styled from 'styled-components';\n\ninterface StyledMarginProps {\n  readonly fontColor?: string;\n}\n\nexport const StyledMargin = styled.div<StyledMarginProps>`\n  color: ${(props) =>\n    props?.fontColor ? props?.fontColor : props.theme.colors.white};\n  padding: 1rem;\n  padding-top: 0.3rem;\n  padding-left: 0;\n  display: flex;\n  flex-direction: column;\n  font-family: ${(props) => props.theme.fonts.monaco};\n  height: 100%;\n`;\n","import styled from 'styled-components';\n\ninterface StyledMarginNumberProps {\n  readonly fontColor?: string;\n}\n\nexport const StyledMarginNumber = styled.section<StyledMarginNumberProps>`\n  color: ${(props) =>\n    props?.fontColor ? props?.fontColor : props.theme.colors.white};\n  padding-bottom: 0.3rem;\n  font-family: ${(props) => props.theme.fonts.monaco};\n`;\n","import React from 'react';\nimport { generateUniqueString } from '../../../helpers/uniqueStringGen';\nimport useCurrentPathname from '../../../hooks/useCurrentPath';\nimport { StyledMargin } from '../../styles/StyledMargin/StyledMargin';\nimport { StyledMarginNumber } from '../../styles/StyledMarginNumber/StyledMarginNumber';\nimport Theme from '../../styles/theme';\n\ninterface Props {\n  marginCount: number;\n}\n\nexport const Margin: React.FC<Props> = ({ marginCount }) => {\n  const url = useCurrentPathname();\n  const marginLength = new Array(marginCount).fill(marginCount);\n\n  return (\n    <StyledMargin\n      role=\"Margin\"\n      theme={Theme}\n      fontColor={url === '/' ? '' : Theme.colors.black}\n    >\n      {marginLength.map((val: null, index: number) => {\n        return (\n          <StyledMarginNumber key={generateUniqueString()} theme={Theme}>\n            {index + 1}\n          </StyledMarginNumber>\n        );\n      })}\n    </StyledMargin>\n  );\n};\n","export const generateUniqueString = (): string =>\n  '_' + Math.random().toString(36).substr(2, 9);\n","import React from 'react';\nimport { StyledSection } from '../../styles/StyledSection/StyledSection';\nimport Theme from '../../styles/theme';\nimport { AboutText } from '../../view/about-text/AboutText';\nimport { Margin } from '../../view/margin/Margin';\n\nconst About: React.FC = () => {\n  return (\n    <StyledSection role=\"About\" id=\"about\" theme={Theme}>\n      <Margin marginCount={18} />\n      <AboutText />\n    </StyledSection>\n  );\n};\n\nexport default About;\n"],"sourceRoot":""}