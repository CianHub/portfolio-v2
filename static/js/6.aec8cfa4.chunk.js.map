{"version":3,"sources":["components/styles/StyledSection/StyledSection.tsx","components/styles/StyledLink/StyledLink.tsx","components/styles/StyledTypedText/StyledTypedText.tsx","components/view/typed-text/TypedText.tsx","components/view/about-text/AboutText.tsx","components/containers/about/About.tsx"],"names":["StyledSection","styled","section","props","backgroundColor","theme","colors","black","fontColor","white","vertical","fonts","monaco","align","justify","StyledLink","div","StyledTypedText","firstLine","showBlinker","TypedText","textToType","textToDisplay","setText","setTextTyped","textTyped","animationFinished","textIndex","currentText","useEffect","timerId","timedType","setTimeout","type","length","slice","clearTimeout","role","aboutText","AboutText","useContext","AnimationDoneContext","state","setState","useState","textLine","setTextLine","textLineDone","setTextLineDone","textLine1","setTextLine1","textLine1Done","setTextLine1Done","textLine2","setTextLine2","textLine2Done","setTextLine2Done","textLine3","setTextLine3","textLine3Done","setTextLine3Done","typedText","index","Theme","green","textTypedLines","push","typeText","to","About","id","height","params","polygon","draw","stroke","color","style","position","right","bottom","left","top","zIndex","margin","padding","width"],"mappings":"6hBAUO,IAAMA,E,MAAgBC,EAAOC,QAAV,KACJ,SAACC,GAAD,OACb,OAALA,QAAK,IAALA,OAAA,EAAAA,EAAOC,iBAAP,OAAyBD,QAAzB,IAAyBA,OAAzB,EAAyBA,EAAOC,gBAAkBD,EAAME,MAAMC,OAAOC,SAC9D,SAACJ,GAAD,OACF,OAALA,QAAK,IAALA,OAAA,EAAAA,EAAOK,WAAP,OAAmBL,QAAnB,IAAmBA,OAAnB,EAAmBA,EAAOK,UAAYL,EAAME,MAAMC,OAAOG,SAGzC,SAACN,GAAD,OAAiB,OAALA,QAAK,IAALA,OAAA,EAAAA,EAAOO,UAAW,SAAW,SAC5C,SAACP,GAAD,OAAWA,EAAME,MAAMM,MAAMC,UAC7B,SAACT,GAAD,OAAiB,OAALA,QAAK,IAALA,OAAA,EAAAA,EAAOU,OAAQV,EAAMU,MAAQ,YAErC,SAACV,GAAD,OAAiB,OAALA,QAAK,IAALA,OAAA,EAAAA,EAAOW,SAAUX,EAAMW,QAAU,YAI3C,SAACX,GAAD,OAAiB,OAALA,QAAK,IAALA,OAAA,EAAAA,EAAOW,SAAUX,EAAMW,QAAU,a,yfCnB7D,IAAMC,EAAad,IAAOe,IAAV,KAEV,SAACb,GAAD,OACPA,EAAMK,UAAYL,EAAMK,UAAYL,EAAME,MAAMC,OAAOG,SAE1C,SAACN,GAAD,OAAWA,EAAME,MAAMM,MAAMC,UAUnC,SAACT,GAAD,OAAWA,EAAME,MAAMC,OAAOC,S,qdCbpC,IAAMU,EAAkBhB,IAAOe,IAAV,KACb,SAACb,GAAD,OAAYA,EAAMe,UAAY,OAAS,YACtC,SAACf,GAAD,OAAYA,EAAMe,UAAY,IAAM,UACjC,SAACf,GAAD,OAAYA,EAAMe,UAAY,OAAS,OAC7C,SAACf,GAAD,OAAYA,EAAMe,UAAY,SAAW,aAC3C,SAACf,GAAD,OAAYA,EAAMK,UAAYL,EAAMK,UAAY,aAKvC,SAACL,GAAD,OACdA,EAAMgB,YAAc,kBAAoB,UAc7B,SAAChB,GAAD,OAAYA,EAAMe,UAAY,OAAS,Y,SCjB3CE,EAA6B,SAAC,GASpC,IARLC,EAQI,EARJA,WACAC,EAOI,EAPJA,cACAC,EAMI,EANJA,QACAC,EAKI,EALJA,aACAC,EAII,EAJJA,UACAP,EAGI,EAHJA,UACAV,EAEI,EAFJA,UACAkB,EACI,EADJA,kBAEIC,EAAY,EACZC,EAAc,GA2BlB,OAzBAC,qBAAU,WACR,IAEIC,EAFEC,EAAY,kBAAMC,YAAW,kBAAMC,MAAQ,KAI3CA,EAAO,WAAa,IAAD,EACvB,IAAe,QAAX,EAAAL,SAAA,eAAaM,WAAb,OAAwBb,QAAxB,IAAwBA,OAAxB,EAAwBA,EAAYa,QAGtC,OAFAP,EAAY,OACZH,GAAa,GAIfI,EAAW,OAAGP,QAAH,IAAGA,OAAH,EAAGA,EAAYc,MAAM,IAAKR,GAErCJ,EAAQK,GACRE,EAAUC,KAKZ,OAFCN,GAAaQ,IAEP,WACLH,GAAWM,aAAaN,MAEzB,IAGD,cAAC,IAAD,UACE,cAACb,EAAD,CACEoB,KAAM,eACNlB,aAAcM,EACdP,UAAWA,EACXV,UAAWA,EAJb,SAMGkB,EAAoBL,EAAaC,OCtDpCgB,EAAsB,CAC1B,gBACA,oDACA,wHAEA,+CAGWC,EAAsB,WAAO,IAAD,EACXC,qBAAWC,KAA/BC,EAD+B,EAC/BA,MAAOC,EADwB,EACxBA,SADwB,EAGPC,mBAAiB,IAHV,mBAGhCC,EAHgC,KAGtBC,EAHsB,OAICF,mBAAkBF,GAJnB,mBAIhCK,EAJgC,KAIlBC,EAJkB,OAMLJ,mBAAiB,IANZ,mBAMhCK,EANgC,KAMrBC,EANqB,OAOGN,mBAAkBF,GAPrB,mBAOhCS,EAPgC,KAOjBC,EAPiB,OASLR,mBAAiB,IATZ,mBAShCS,EATgC,KASrBC,EATqB,OAUGV,mBAAkBF,GAVrB,mBAUhCa,EAVgC,KAUjBC,EAViB,OAYLZ,mBAAiB,IAZZ,mBAYhCa,EAZgC,KAYrBC,EAZqB,OAaGd,mBAAkBF,GAbrB,mBAahCiB,EAbgC,KAajBC,EAbiB,KAevC/B,qBAAU,WAER,OADI8B,IAAkBjB,GAAOC,GAAS,GAC/B,YACJD,GAASC,GAAS,MAEpB,IAEH,IAAMkB,EAAY,CAChB,cAAC,EAAD,CACEnC,kBAAmBgB,EACnBoB,MAAO,EAEPxC,cAAeuB,EACfxB,WAAYiB,EAAU,GACtBf,QAASuB,EACTtB,aAAcwB,EACdvB,UAAWsB,EACX7B,WAAW,EACXV,UAAWuD,IAAMzD,OAAO0D,OAPpB,aASN,cAAC,EAAD,CACEtC,kBAAmBgB,EACnBoB,MAAO,EAEPxC,cAAe2B,EACf5B,WAAYiB,EAAU,GACtBf,QAAS2B,EACT1B,aAAc4B,EACd3B,UAAW0B,EACXjC,WAAW,GANP,cAQN,cAAC,EAAD,CACEQ,kBAAmBgB,EACnBoB,MAAO,EAEPxC,cAAe+B,EACfhC,WAAYiB,EAAU,GACtBf,QAAS+B,EACT9B,aAAcgC,EACd/B,UAAW8B,GALP,cAON,cAAC,EAAD,CACE7B,kBAAmBgB,EACnBoB,MAAO,EAEPxC,cAAemC,EACfpC,WAAYiB,EAAU,GACtBf,QAASmC,EACTlC,aAAcoC,EACdnC,UAAWkC,GALP,eA8BR,OACE,sBAAKtB,KAAK,UAAV,UAtBe,WACf,IAAM4B,EAAiB,CAACJ,EAAU,IAMlC,OAJId,GAAckB,EAAeC,KAAKL,EAAU,IAC5CV,GAAec,EAAeC,KAAKL,EAAU,IAC7CN,GAAeU,EAAeC,KAAKL,EAAU,IAE1CnB,EAAQmB,EAAYI,EAgBxBE,GAZHR,GACE,cAAC,IAAD,UACE,qBAAKtB,KAAK,OAAV,SACE,cAACtB,EAAD,CAAYV,MAAO0D,IAAnB,SACE,cAAC,IAAD,CAAMK,GAAG,YAAT,uC,kBC1DGC,UAnCS,WACtB,OACE,eAACrE,EAAA,EAAD,CACEqC,KAAK,UACLiC,GAAG,QACHjE,MAAO0D,IACP3D,gBAAiB,cACjBM,UAAU,EALZ,UAOE,cAAC,IAAD,CACE6D,OAAO,OACPC,OAAQ,CACNC,QAAS,CACPC,KAAM,CAAEC,OAAQ,CAAEC,MAAO,+BAG7BC,MAAO,CACLC,SAAU,QACVC,MAAO,EACPC,OAAQ,EACRC,KAAM,EACNC,IAAK,EACLC,QAAS,IACTZ,OAAQ,QACRa,OAAQ,EACRC,QAAS,EACTC,MAAO,OACPlF,gBAAiB2D,IAAMzD,OAAOC,SAGlC,cAAC,EAAD","file":"static/js/6.aec8cfa4.chunk.js","sourcesContent":["import styled from 'styled-components';\n\ninterface StyledSectionProps {\n  readonly backgroundColor?: string;\n  readonly fontColor?: string;\n  readonly vertical?: boolean;\n  readonly justify?: string;\n  readonly align?: string;\n}\n\nexport const StyledSection = styled.section<StyledSectionProps>`\n  background-color: ${(props) =>\n    props?.backgroundColor ? props?.backgroundColor : props.theme.colors.black};\n  color: ${(props) =>\n    props?.fontColor ? props?.fontColor : props.theme.colors.white};\n  padding: 1rem;\n  display: flex;\n  flex-direction: ${(props) => (props?.vertical ? 'column' : 'row')};\n  font-family: ${(props) => props.theme.fonts.monaco};\n  align-items: ${(props) => (props?.align ? props.align : 'center')};\n  min-height: 85vh;\n  justify-content: ${(props) => (props?.justify ? props.justify : 'center')};\n\n  @media (min-width: 1024px) {\n    min-height: 80vh;\n    justify-content: ${(props) => (props?.justify ? props.justify : 'center')};\n    margin-left: 2.5rem;\n  }\n`;\n","import styled from 'styled-components';\n\ninterface StyledLinkProps {\n  readonly fontColor?: string;\n}\n\nexport const StyledLink = styled.div<StyledLinkProps>`\n  a {\n    color: ${(props) =>\n      props.fontColor ? props.fontColor : props.theme.colors.white};\n    display: flex;\n    font-family: ${(props) => props.theme.fonts.monaco};\n    text-decoration: none;\n    transition: 200ms ease-in-out;\n    margin-top: 2rem;\n    border: 2px white solid;\n    width: 150px;\n    padding: 0.5rem;\n  }\n\n  a:hover {\n    color: ${(props) => props.theme.colors.black};\n    background-color: white;\n    cursor: pointer;\n  }\n`;\n","import styled from 'styled-components';\n\ninterface StyledTypedTextProps {\n  showBlinker: boolean;\n  firstLine?: boolean;\n  fontColor?: string;\n}\n\nexport const StyledTypedText = styled.div<StyledTypedTextProps>`\n  font-size: ${(props) => (props.firstLine ? '2rem' : '1.2rem')};\n  margin-top: ${(props) => (props.firstLine ? '0' : '1rem')};\n  margin-bottom: ${(props) => (props.firstLine ? '1rem' : '0')};\n  display: ${(props) => (props.firstLine ? 'inline' : 'default')};\n  color: ${(props) => (props.fontColor ? props.fontColor : 'default')};\n  transition: all 0.4s ease-in-out;\n\n  &:after {\n    content: '';\n    border-right: ${(props) =>\n      props.showBlinker ? '2px solid white' : 'none'};\n    animation: blink 0.5s infinite ease;\n  }\n\n  @keyframes blink {\n    0% {\n      opacity: 0;\n    }\n    100% {\n      opacity: 1;\n    }\n  }\n\n  @media (min-width: 1024px) {\n    font-size: ${(props) => (props.firstLine ? '2rem' : '1.2rem')};\n  }\n`;\n","import React, { useEffect } from 'react';\nimport { StyledTypedText } from '../../styles/StyledTypedText/StyledTypedText';\nimport { Fade } from 'react-awesome-reveal';\n\ninterface Props {\n  index: number;\n  textToType: string;\n  textToDisplay: string;\n  setText: React.Dispatch<React.SetStateAction<string>>;\n  textTyped: boolean;\n  setTextTyped: React.Dispatch<React.SetStateAction<boolean>>;\n  firstLine?: boolean;\n  fontColor?: string;\n  animationFinished: boolean;\n}\n\nexport const TypedText: React.FC<Props> = ({\n  textToType,\n  textToDisplay,\n  setText,\n  setTextTyped,\n  textTyped,\n  firstLine,\n  fontColor,\n  animationFinished,\n}) => {\n  let textIndex = 0;\n  let currentText = '';\n\n  useEffect(() => {\n    const timedType = () => setTimeout(() => type(), 50);\n\n    let timerId: number;\n\n    const type = (): void => {\n      if (currentText?.length === textToType?.length) {\n        textIndex = 0;\n        setTextTyped(true);\n        return;\n      }\n\n      currentText = textToType?.slice(0, ++textIndex);\n\n      setText(currentText);\n      timerId = timedType();\n    };\n\n    !textTyped && type();\n\n    return () => {\n      timerId && clearTimeout(timerId);\n    };\n  }, []);\n\n  return (\n    <Fade>\n      <StyledTypedText\n        role={'presentation'}\n        showBlinker={!textTyped}\n        firstLine={firstLine}\n        fontColor={fontColor}\n      >\n        {animationFinished ? textToType : textToDisplay}\n      </StyledTypedText>\n    </Fade>\n  );\n};\n","import React, { useContext, useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { AnimationDoneContext } from '../../context/AnimationDoneContext';\nimport { StyledLink } from '../../styles/StyledLink/StyledLink';\nimport Theme from '../../styles/theme';\nimport { TypedText } from '../typed-text/TypedText';\nimport { Fade } from 'react-awesome-reveal';\n\nconst aboutText: string[] = [\n  'Hello World, ',\n  'my name is Cian and I’m a software engineer.',\n  'I love to make stuff with JavaScript/TypeScript, React, Node, Python and pretty much any other modern web technology.',\n\n  ' (I also ❤️  Muay Thai and pugs.)',\n];\n\nexport const AboutText: React.FC = () => {\n  const { state, setState } = useContext(AnimationDoneContext);\n\n  const [textLine, setTextLine] = useState<string>('');\n  const [textLineDone, setTextLineDone] = useState<boolean>(state);\n\n  const [textLine1, setTextLine1] = useState<string>('');\n  const [textLine1Done, setTextLine1Done] = useState<boolean>(state);\n\n  const [textLine2, setTextLine2] = useState<string>('');\n  const [textLine2Done, setTextLine2Done] = useState<boolean>(state);\n\n  const [textLine3, setTextLine3] = useState<string>('');\n  const [textLine3Done, setTextLine3Done] = useState<boolean>(state);\n\n  useEffect(() => {\n    if (textLine3Done && !state) setState(true);\n    return () => {\n      !state && setState(true);\n    };\n  }, []);\n\n  const typedText = [\n    <TypedText\n      animationFinished={state}\n      index={0}\n      key=\"text-line\"\n      textToDisplay={textLine}\n      textToType={aboutText[0]}\n      setText={setTextLine}\n      setTextTyped={setTextLineDone}\n      textTyped={textLineDone}\n      firstLine={true}\n      fontColor={Theme.colors.green}\n    />,\n    <TypedText\n      animationFinished={state}\n      index={1}\n      key=\"text-line1\"\n      textToDisplay={textLine1}\n      textToType={aboutText[1]}\n      setText={setTextLine1}\n      setTextTyped={setTextLine1Done}\n      textTyped={textLine1Done}\n      firstLine={true}\n    />,\n    <TypedText\n      animationFinished={state}\n      index={2}\n      key=\"text-line2\"\n      textToDisplay={textLine2}\n      textToType={aboutText[2]}\n      setText={setTextLine2}\n      setTextTyped={setTextLine2Done}\n      textTyped={textLine2Done}\n    />,\n    <TypedText\n      animationFinished={state}\n      index={3}\n      key=\"text-line3\"\n      textToDisplay={textLine3}\n      textToType={aboutText[3]}\n      setText={setTextLine3}\n      setTextTyped={setTextLine3Done}\n      textTyped={textLine3Done}\n    />,\n  ];\n\n  const typeText = (): JSX.Element[] => {\n    const textTypedLines = [typedText[0]];\n\n    if (textLineDone) textTypedLines.push(typedText[1]);\n    if (textLine1Done) textTypedLines.push(typedText[2]);\n    if (textLine2Done) textTypedLines.push(typedText[3]);\n\n    return state ? typedText : textTypedLines;\n  };\n\n  const showLink = () =>\n    textLine3Done && (\n      <Fade>\n        <div role=\"link\">\n          <StyledLink theme={Theme}>\n            <Link to=\"/projects\">View Projects &gt;</Link>\n          </StyledLink>\n        </div>\n      </Fade>\n    );\n\n  return (\n    <div role=\"article\">\n      {typeText()}\n      {showLink()}\n    </div>\n  );\n};\n","import React from 'react';\nimport { StyledSection } from '../../styles/StyledSection/StyledSection';\nimport Theme from '../../styles/theme';\nimport { AboutText } from '../../view/about-text/AboutText';\nimport Particles from 'react-particles-js';\n\nconst About: React.FC = () => {\n  return (\n    <StyledSection\n      role=\"section\"\n      id=\"about\"\n      theme={Theme}\n      backgroundColor={'transparent'}\n      vertical={true}\n    >\n      <Particles\n        height=\"100%\"\n        params={{\n          polygon: {\n            draw: { stroke: { color: 'rgba(255, 255, 255, .05)' } },\n          },\n        }}\n        style={{\n          position: 'fixed',\n          right: 0,\n          bottom: 0,\n          left: 0,\n          top: 0,\n          zIndex: -100,\n          height: '100vh',\n          margin: 0,\n          padding: 0,\n          width: '100%',\n          backgroundColor: Theme.colors.black,\n        }}\n      ></Particles>\n      <AboutText />\n    </StyledSection>\n  );\n};\n\nexport default About;\n"],"sourceRoot":""}